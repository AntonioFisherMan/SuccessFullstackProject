{"ast":null,"code":"import _objectSpread from\"/Volumes/Anton/myApp-1/APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{testAPI}from\"../api/api\";import{returnErrors,returnSuccess}from'./SuccessErrorReducer';var GET_INFORM_OF_USER=\"GET_INFORM_OF_USER\";var initialState={inform:null,isAddInform:false,sendHelpMessage:false};var InformReducer=function InformReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_INFORM_OF_USER:return _objectSpread(_objectSpread({},state),{},{inform:action.inform,isAddInform:action.isAddInform});default:return state;}};var addInform=function addInform(inform,isAddInform){return{type:GET_INFORM_OF_USER,inform:inform,isAddInform:isAddInform};};export var getInform=function getInform(id){return function(dispatch){testAPI.getInform(id).then(function(response){dispatch(addInform(response.data.inform,response.data.isAddInform));});};};export var updateInform=function updateInform(inform){return function(dispatch,getState){testAPI.updateInform(getState().auth.user.id,inform).then(function(response){dispatch(returnSuccess(response.data.message,response.status,'SUCCESS_USER_INFORM_CHANGE'));}).catch(function(err){dispatch(returnErrors(err.response.data.message,err.response.status,'USER_INFORM_CHANGE_ERROR'));});};};export var setInform=function setInform(inform){var isAddInform=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return function(dispatch,getState){debugger;testAPI.setInform(getState().auth.user.id,inform,isAddInform).then(function(response){dispatch(returnSuccess(response.data.message,response.status,'SUCCESS_USER_INFORM_SET'));dispatch(addInform(response.data));}).catch(function(err){dispatch(returnErrors(err.response.data.message,err.response.status,'ERROR_USER_INFORM_SET'));});};};export var sendHelpMessage=function sendHelpMessage(helpMessage){return function(dispatch,getState){testAPI.sendHelpMessage(helpMessage,getState().auth.userId).then(function(response){dispatch(returnSuccess(response.data.message,response.status,'SUCCESS_HELP_MESSAGE'));}).catch(function(err){dispatch(returnErrors(err.response.data.message,err.response.status,'ERROR_HELP_MESSAGE'));});};};export default InformReducer;","map":{"version":3,"sources":["/Volumes/Anton/myApp-1/APP/client/src/redux/InformReducer.js"],"names":["testAPI","returnErrors","returnSuccess","GET_INFORM_OF_USER","initialState","inform","isAddInform","sendHelpMessage","InformReducer","state","action","type","addInform","getInform","id","dispatch","then","response","data","updateInform","getState","auth","user","message","status","catch","err","setInform","helpMessage","userId"],"mappings":"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","sourcesContent":["import { testAPI } from \"../api/api\";\nimport {returnErrors,returnSuccess} from './SuccessErrorReducer'\nconst GET_INFORM_OF_USER = \"GET_INFORM_OF_USER\";\n\n\n\nlet initialState = {\n  inform: null,\n  isAddInform:false,\n  sendHelpMessage:false\n};\n\nlet InformReducer = (state = initialState, action) => {\n  switch (action.type) {\n   \n    case GET_INFORM_OF_USER:\n  \n      return { ...state, inform: action.inform,isAddInform:action.isAddInform};\n    default:\n      return state;\n  }\n};\n\nconst addInform=(inform,isAddInform)=>({type:GET_INFORM_OF_USER,inform,isAddInform})\n\nexport const getInform=(id)=>(dispatch)=>{\n   testAPI.getInform(id).then(response=>{\n       dispatch(addInform(response.data.inform,response.data.isAddInform))\n   })\n}\nexport const updateInform=(inform)=>(dispatch,getState)=>{\n   testAPI.updateInform((getState().auth.user.id),inform).then(response=>{\n       dispatch(returnSuccess(response.data.message,response.status,'SUCCESS_USER_INFORM_CHANGE'))\n   }).catch(err=>{\n    dispatch(returnErrors(err.response.data.message,err.response.status,'USER_INFORM_CHANGE_ERROR'))\n  })\n}\nexport const setInform=(inform,isAddInform=true)=>(dispatch,getState)=>{\n  debugger\n  testAPI.setInform((getState().auth.user.id),inform,isAddInform).then(response=>{\n    dispatch(returnSuccess(response.data.message,response.status,'SUCCESS_USER_INFORM_SET'))\n    dispatch(addInform(response.data))\n  }).catch(err=>{\n    dispatch(returnErrors(err.response.data.message,err.response.status,'ERROR_USER_INFORM_SET'))\n  })\n}\n\nexport const sendHelpMessage=(helpMessage)=>(dispatch,getState)=>{\n  testAPI.sendHelpMessage(helpMessage,getState().auth.userId).then(response=>{\n    dispatch(returnSuccess(response.data.message,response.status,'SUCCESS_HELP_MESSAGE'))\n  }).catch(err=>{\n    dispatch(returnErrors(err.response.data.message,err.response.status,'ERROR_HELP_MESSAGE'))\n  })\n}\n\nexport default InformReducer"]},"metadata":{},"sourceType":"module"}