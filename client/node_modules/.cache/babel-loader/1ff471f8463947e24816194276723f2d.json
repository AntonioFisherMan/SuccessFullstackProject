{"ast":null,"code":"import _objectSpread from\"/Volumes/Anton/myApp-1/APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{testAPI}from\"../api/api\";import{returnErrors,returnSuccess}from\"./SuccessErrorReducer\";var SET_REVIEWS=\"SET_REVIEW\";var INITIAL_REVIEWS=\"INITIAL_REVIEWS\";var initialState={reviews:[]};var ReviewsReducer=function ReviewsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case INITIAL_REVIEWS:return initialState;case SET_REVIEWS:return _objectSpread(_objectSpread({},state),{},{reviews:[action.item]});default:return state;}};export var setItemOfReview=function setItemOfReview(item){return{type:SET_REVIEWS,item:item};};export var clearReview=function clearReview(){return{type:INITIAL_REVIEWS};};export var setReviews=function setReviews(data,goodsId,reviewText,rating){return function(dispatch,getState){var userImage;if(getState().auth.userInform){userImage=getState().auth.userInform.userImage;}testAPI.setReviews(getState().auth.user.name,userImage,data,goodsId,reviewText,rating).then(function(response){if(response.data.success){dispatch(returnSuccess(response.data.message,response.status,\"SUCCESS_FILE_UPLOAD\"));dispatch(clearReview());}else{dispatch(returnErrors(response.data.message,response.status,\"ERRORS_FILE_UPLOAD\"));}});};};export default ReviewsReducer;","map":{"version":3,"sources":["/Volumes/Anton/myApp-1/APP/client/src/redux/ReviewsReducer.js"],"names":["testAPI","returnErrors","returnSuccess","SET_REVIEWS","INITIAL_REVIEWS","initialState","reviews","ReviewsReducer","state","action","type","item","setItemOfReview","clearReview","setReviews","data","goodsId","reviewText","rating","dispatch","getState","userImage","auth","userInform","user","name","then","response","success","message","status"],"mappings":"uJAAA,OAASA,OAAT,KAAwB,YAAxB,CAEA,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,uBAA5C,CACA,GAAMC,CAAAA,WAAW,CAAG,YAApB,CACA,GAAMC,CAAAA,eAAe,CAAG,iBAAxB,CACA,GAAIC,CAAAA,YAAY,CAAG,CACjBC,OAAO,CAAE,EADQ,CAAnB,CAIA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CACvD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,CAAAA,eAAL,CACE,MAAOC,CAAAA,YAAP,CACF,IAAKF,CAAAA,WAAL,CACE,sCAAYK,KAAZ,MAAmBF,OAAO,CAAE,CAACG,MAAM,CAACE,IAAR,CAA5B,GACF,QACE,MAAOH,CAAAA,KAAP,CANJ,CAQD,CATD,CAWA,MAAO,IAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACD,IAAD,QAAW,CAAED,IAAI,CAAEP,WAAR,CAAqBQ,IAAI,CAAJA,IAArB,CAAX,EAAxB,CACP,MAAO,IAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAO,CAAEH,IAAI,CAAEN,eAAR,CAAP,EAApB,CAEP,MAAO,IAAMU,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAOC,OAAP,CAAgBC,UAAhB,CAA4BC,MAA5B,QAAuC,UAC/DC,QAD+D,CAE/DC,QAF+D,CAG5D,CACH,GAAIC,CAAAA,SAAJ,CACA,GAAID,QAAQ,GAAGE,IAAX,CAAgBC,UAApB,CAAgC,CAC9BF,SAAS,CAAGD,QAAQ,GAAGE,IAAX,CAAgBC,UAAhB,CAA2BF,SAAvC,CACD,CACDrB,OAAO,CACJc,UADH,CAEIM,QAAQ,GAAGE,IAAX,CAAgBE,IAAhB,CAAqBC,IAFzB,CAGIJ,SAHJ,CAIIN,IAJJ,CAKIC,OALJ,CAMIC,UANJ,CAOIC,MAPJ,EASGQ,IATH,CASQ,SAACC,QAAD,CAAc,CAClB,GAAIA,QAAQ,CAACZ,IAAT,CAAca,OAAlB,CAA2B,CACzBT,QAAQ,CACNjB,aAAa,CACXyB,QAAQ,CAACZ,IAAT,CAAcc,OADH,CAEXF,QAAQ,CAACG,MAFE,CAGX,qBAHW,CADP,CAAR,CAOAX,QAAQ,CAACN,WAAW,EAAZ,CAAR,CACD,CATD,IASO,CACLM,QAAQ,CACNlB,YAAY,CACV0B,QAAQ,CAACZ,IAAT,CAAcc,OADJ,CAEVF,QAAQ,CAACG,MAFC,CAGV,oBAHU,CADN,CAAR,CAOD,CACF,CA5BH,EA6BD,CArCyB,EAAnB,CAuCP,cAAevB,CAAAA,cAAf","sourcesContent":["import { testAPI } from \"../api/api\";\n\nimport { returnErrors, returnSuccess } from \"./SuccessErrorReducer\";\nconst SET_REVIEWS = \"SET_REVIEW\";\nconst INITIAL_REVIEWS = \"INITIAL_REVIEWS\";\nlet initialState = {\n  reviews: [],\n};\n\nconst ReviewsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIAL_REVIEWS:\n      return initialState;\n    case SET_REVIEWS:\n      return { ...state, reviews: [action.item] };\n    default:\n      return state;\n  }\n};\n\nexport const setItemOfReview = (item) => ({ type: SET_REVIEWS, item });\nexport const clearReview = () => ({ type: INITIAL_REVIEWS });\n\nexport const setReviews = (data, goodsId, reviewText, rating) => (\n  dispatch,\n  getState\n) => {\n  let userImage;\n  if (getState().auth.userInform) {\n    userImage = getState().auth.userInform.userImage;\n  }\n  testAPI\n    .setReviews(\n      getState().auth.user.name,\n      userImage,\n      data,\n      goodsId,\n      reviewText,\n      rating\n    )\n    .then((response) => {\n      if (response.data.success) {\n        dispatch(\n          returnSuccess(\n            response.data.message,\n            response.status,\n            \"SUCCESS_FILE_UPLOAD\"\n          )\n        );\n        dispatch(clearReview());\n      } else {\n        dispatch(\n          returnErrors(\n            response.data.message,\n            response.status,\n            \"ERRORS_FILE_UPLOAD\"\n          )\n        );\n      }\n    });\n};\n\nexport default ReviewsReducer;\n"]},"metadata":{},"sourceType":"module"}