{"ast":null,"code":"var _jsxFileName = \"/Volumes/Anton/myApp-1/APP/client/src/components/Pages/InformPage/InformContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport InformPage from './InformPage';\nimport { getInform, updateInform, setInform } from '../../../redux/InformReducer';\nimport { compose } from 'redux';\nimport { WithAuthRedirect } from '../../../hoc/WithAuthRedirect';\nimport { SuccessErrorsData } from '../../../hoc/SuccessErrorsData';\n\nclass InformPageContainer extends React.Component {\n  componentDidMount() {\n    this.props.getInform(this.props.userId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.inform !== this.props.inform) {\n      this.props.getInform(this.props.userId);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InformPage, Object.assign({}, this.props, {\n      isAddInform: this.props.isAddInform,\n      updateInform: this.props.updateInform,\n      setInform: this.props.setInform,\n      success: this.props.success,\n      errors: this.props.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nlet mapDispatchToProps = state => {\n  return {\n    inform: state.inform.inform,\n    userId: state.auth.user.id,\n    isAddInform: state.inform.isAddInform\n  };\n};\n\nexport default compose(WithAuthRedirect, SuccessErrorsData, connect(mapDispatchToProps, {\n  getInform,\n  updateInform,\n  setInform\n}))(InformPageContainer);","map":{"version":3,"sources":["/Volumes/Anton/myApp-1/APP/client/src/components/Pages/InformPage/InformContainer.jsx"],"names":["React","connect","InformPage","getInform","updateInform","setInform","compose","WithAuthRedirect","SuccessErrorsData","InformPageContainer","Component","componentDidMount","props","userId","componentDidUpdate","prevProps","inform","render","isAddInform","success","errors","mapDispatchToProps","state","auth","user","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,SAAR,EAAkBC,YAAlB,EAA+BC,SAA/B,QAA+C,8BAA/C;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAAQC,iBAAR,QAAgC,gCAAhC;;AAEA,MAAMC,mBAAN,SAAkCT,KAAK,CAACU,SAAxC,CAAiD;AAC/CC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWT,SAAX,CAAqB,KAAKS,KAAL,CAAWC,MAAhC;AACD;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AAC5B,QAAGA,SAAS,CAACC,MAAV,KAAmB,KAAKJ,KAAL,CAAWI,MAAjC,EAAwC;AACvC,WAAKJ,KAAL,CAAWT,SAAX,CAAqB,KAAKS,KAAL,CAAWC,MAAhC;AACA;AACD;;AACDI,EAAAA,MAAM,GAAE;AACJ,wBACE,uDACA,oBAAC,UAAD,oBAAgB,KAAKL,KAArB;AAA4B,MAAA,WAAW,EAAE,KAAKA,KAAL,CAAWM,WAApD;AAAiE,MAAA,YAAY,EAAE,KAAKN,KAAL,CAAWR,YAA1F;AAAwG,MAAA,SAAS,EAAE,KAAKQ,KAAL,CAAWP,SAA9H;AAAwI,MAAA,OAAO,EAAE,KAAKO,KAAL,CAAWO,OAA5J;AAAqK,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,MAAxL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADA,CADF;AAMH;;AAhB8C;;AAmBjD,IAAIC,kBAAkB,GAAEC,KAAD,IAAS;AAC5B,SAAM;AACFN,IAAAA,MAAM,EAACM,KAAK,CAACN,MAAN,CAAaA,MADlB;AAEFH,IAAAA,MAAM,EAACS,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,EAFrB;AAGFP,IAAAA,WAAW,EAACI,KAAK,CAACN,MAAN,CAAaE;AAHvB,GAAN;AAKH,CAND;;AASA,eAAeZ,OAAO,CACpBC,gBADoB,EAEpBC,iBAFoB,EAGpBP,OAAO,CAACoB,kBAAD,EAAoB;AAAClB,EAAAA,SAAD;AAAWC,EAAAA,YAAX;AAAwBC,EAAAA;AAAxB,CAApB,CAHa,CAAP,CAIbI,mBAJa,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport InformPage from './InformPage';\nimport {getInform,updateInform,setInform} from '../../../redux/InformReducer'\nimport { compose } from 'redux';\nimport { WithAuthRedirect } from '../../../hoc/WithAuthRedirect';\nimport {SuccessErrorsData} from '../../../hoc/SuccessErrorsData'\n\nclass InformPageContainer extends React.Component{\n  componentDidMount(){\n    this.props.getInform(this.props.userId);\n  }\n  componentDidUpdate(prevProps){\n   if(prevProps.inform!==this.props.inform){\n    this.props.getInform(this.props.userId);\n   }\n  }\n  render(){\n      return(\n        <>\n        <InformPage {...this.props} isAddInform={this.props.isAddInform} updateInform={this.props.updateInform} setInform={this.props.setInform}success={this.props.success} errors={this.props.errors}\n        />\n        </>\n      )\n  }\n}\n\nlet mapDispatchToProps=(state)=>{\n    return{\n        inform:state.inform.inform,\n        userId:state.auth.user.id,\n        isAddInform:state.inform.isAddInform\n    }\n}\n\n\nexport default compose(\n  WithAuthRedirect,\n  SuccessErrorsData,\n  connect(mapDispatchToProps,{getInform,updateInform,setInform})\n)(InformPageContainer)\n\n"]},"metadata":{},"sourceType":"module"}