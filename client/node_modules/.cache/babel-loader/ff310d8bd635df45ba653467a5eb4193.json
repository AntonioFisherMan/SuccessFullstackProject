{"ast":null,"code":"var _jsxFileName = \"/Volumes/Anton/myApp-1/APP/client/src/components/Forms/Checkout/Checkout.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ReduxCheckoutForm } from './CheckoutForm';\nimport { addOrdersThunk, addOrders, addUnloginOrdersThunk } from '../../../redux/OrdersReducer';\nimport { compose } from 'redux';\nimport { SuccessErrorsData } from '../../../hoc/SuccessErrorsData';\nimport { getInform } from '../../../redux/InformReducer';\n\nclass Checkout extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formData => {\n      let data;\n\n      if (!this.props.auth.isAuth) {\n        data = {\n          items: this.props.items,\n          formData\n        };\n        this.props.addUnloginOrdersThunk(data);\n        this.props.history.push(\"/order\");\n      } else {\n        data = {\n          items: this.props.items,\n          inform: formData,\n          id: this.props.auth.userId\n        };\n        this.props.addOrdersThunk(data);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.userInform ? /*#__PURE__*/React.createElement(ReduxCheckoutForm, {\n      initialValues: this.props.userInform,\n      onSubmit: this.onSubmit,\n      success: this.props.success,\n      errors: this.props.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(ReduxCheckoutForm, {\n      onSubmit: this.onSubmit,\n      success: this.props.success,\n      errors: this.props.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 178\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    errors: state.errors,\n    items: state.card.items,\n    auth: state.auth,\n    userInform: state.auth.userInform\n  };\n};\n\nexport default compose(SuccessErrorsData, connect(mapStateToProps, {\n  addOrdersThunk,\n  addUnloginOrdersThunk,\n  addOrders,\n  getInform\n}))(Checkout);","map":{"version":3,"sources":["/Volumes/Anton/myApp-1/APP/client/src/components/Forms/Checkout/Checkout.jsx"],"names":["React","connect","ReduxCheckoutForm","addOrdersThunk","addOrders","addUnloginOrdersThunk","compose","SuccessErrorsData","getInform","Checkout","Component","onSubmit","formData","data","props","auth","isAuth","items","history","push","inform","id","userId","render","userInform","success","errors","mapStateToProps","state","card"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,qBAApC,QAAiE,8BAAjE;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAAQC,SAAR,QAAwB,8BAAxB;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SACnCC,QADmC,GACvBC,QAAD,IAAc;AACrB,UAAIC,IAAJ;;AACA,UAAI,CAAC,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAArB,EAA6B;AACzBH,QAAAA,IAAI,GAAG;AAAEI,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAApB;AAA2BL,UAAAA;AAA3B,SAAP;AACA,aAAKE,KAAL,CAAWT,qBAAX,CAAiCQ,IAAjC;AACA,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,OAJD,MAKK;AACDN,QAAAA,IAAI,GAAG;AAAEI,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAApB;AAA2BG,UAAAA,MAAM,EAACR,QAAlC;AAA4CS,UAAAA,EAAE,EAAE,KAAKP,KAAL,CAAWC,IAAX,CAAgBO;AAAhE,SAAP;AACA,aAAKR,KAAL,CAAWX,cAAX,CAA0BU,IAA1B;AACH;AACJ,KAZkC;AAAA;;AAcnCU,EAAAA,MAAM,GAAG;AACL,wBACI,0CACC,KAAKT,KAAL,CAAWU,UAAX,gBAAuB,oBAAC,iBAAD;AAAmB,MAAA,aAAa,EAAE,KAAKV,KAAL,CAAWU,UAA7C;AAAyD,MAAA,QAAQ,EAAE,KAAKb,QAAxE;AAAkF,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWW,OAAtG;AAA+G,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWY,MAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,gBAAoK,oBAAC,iBAAD;AAAoB,MAAA,QAAQ,EAAE,KAAKf,QAAnC;AAA6C,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWW,OAAjE;AAA0E,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWY,MAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADrK,CADJ;AAKH;;AApBkC;;AAyBvC,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,MAAM,EAAEE,KAAK,CAACF,MADX;AAEHT,IAAAA,KAAK,EAAEW,KAAK,CAACC,IAAN,CAAWZ,KAFf;AAGHF,IAAAA,IAAI,EAAEa,KAAK,CAACb,IAHT;AAIHS,IAAAA,UAAU,EAACI,KAAK,CAACb,IAAN,CAAWS;AAJnB,GAAP;AAMH,CAPD;;AAQA,eAAelB,OAAO,CACnBC,iBADmB,EAEnBN,OAAO,CAAC0B,eAAD,EAAkB;AAAExB,EAAAA,cAAF;AAAkBE,EAAAA,qBAAlB;AAAyCD,EAAAA,SAAzC;AAAmDI,EAAAA;AAAnD,CAAlB,CAFY,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { ReduxCheckoutForm } from './CheckoutForm'\nimport { addOrdersThunk, addOrders, addUnloginOrdersThunk } from '../../../redux/OrdersReducer'\nimport { compose } from 'redux'\nimport { SuccessErrorsData } from '../../../hoc/SuccessErrorsData'\nimport {getInform} from '../../../redux/InformReducer'\n\nclass Checkout extends React.Component {\n    onSubmit = (formData) => {\n        let data;\n        if (!this.props.auth.isAuth) {\n            data = { items: this.props.items, formData }\n            this.props.addUnloginOrdersThunk(data)\n            this.props.history.push(\"/order\")\n        }\n        else {\n            data = { items: this.props.items, inform:formData, id: this.props.auth.userId }\n            this.props.addOrdersThunk(data)\n        }\n    }\n\n    render() {\n        return (\n            <>\n            {this.props.userInform? <ReduxCheckoutForm initialValues={this.props.userInform} onSubmit={this.onSubmit} success={this.props.success} errors={this.props.errors} />:<ReduxCheckoutForm  onSubmit={this.onSubmit} success={this.props.success} errors={this.props.errors} />}\n           </>\n        )\n    }\n\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        errors: state.errors,\n        items: state.card.items,\n        auth: state.auth,\n        userInform:state.auth.userInform\n    }\n}\nexport default compose(\n   SuccessErrorsData,\n   connect(mapStateToProps, { addOrdersThunk, addUnloginOrdersThunk, addOrders,getInform })\n)(Checkout)"]},"metadata":{},"sourceType":"module"}