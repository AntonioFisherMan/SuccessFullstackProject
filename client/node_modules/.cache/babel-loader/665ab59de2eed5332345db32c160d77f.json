{"ast":null,"code":"import { getAuth } from './AuthReducer';\nimport { getInform } from './InformReducer';\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\nconst APP_IS_POPUP = \"APP_IS_POPUP\";\nconst GET_USERS = \"GET_USERS\";\nlet initialState = {\n  initialized: false,\n  isPopUp: false,\n  users: []\n};\n\nconst AppReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INITIALIZED:\n      return { ...state,\n        initialized: true\n      };\n\n    case GET_USERS:\n      return { ...state,\n        users: [action.users]\n      };\n\n    case APP_IS_POPUP:\n      return { ...state,\n        isPopUp: action.isPopUp\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setInitialize = () => ({\n  type: SET_INITIALIZED\n});\nexport const isPopUp = isPopUp => ({\n  type: APP_IS_POPUP,\n  isPopUp\n});\n\nconst getUsers = users => ({\n  type: GET_USERS,\n  users\n});\n\nexport const initializeThunkApp = () => dispatch => {\n  let promise = dispatch(getAuth());\n  Promise.all([promise]).then(() => {\n    dispatch(setInitialize());\n  });\n};\nexport const getUsersThunk = () => dispatch => {\n  testApi.getUsers().then(res => {\n    dispatch(getUsers());\n  });\n};\nexport default AppReducer;","map":{"version":3,"sources":["/Volumes/Anton/myApp-1/APP/client/src/redux/AppReducer.js"],"names":["getAuth","getInform","SET_INITIALIZED","APP_IS_POPUP","GET_USERS","initialState","initialized","isPopUp","users","AppReducer","state","action","type","setInitialize","getUsers","initializeThunkApp","dispatch","promise","Promise","all","then","getUsersThunk","testApi","res"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,MAAMC,eAAe,GAAC,iBAAtB;AACA,MAAMC,YAAY,GAAC,cAAnB;AACA,MAAMC,SAAS,GAAC,WAAhB;AACA,IAAIC,YAAY,GAAC;AACXC,EAAAA,WAAW,EAAC,KADD;AAEXC,EAAAA,OAAO,EAAC,KAFG;AAGXC,EAAAA,KAAK,EAAC;AAHK,CAAjB;;AAMA,MAAMC,UAAU,GAAC,CAACC,KAAK,GAACL,YAAP,EAAoBM,MAApB,KAA6B;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKV,eAAL;AACC,aAAM,EACF,GAAGQ,KADD;AACOJ,QAAAA,WAAW,EAAC;AADnB,OAAN;;AAGA,SAAKF,SAAL;AACE,aAAM,EACF,GAAGM,KADD;AACOF,QAAAA,KAAK,EAAC,CAACG,MAAM,CAACH,KAAR;AADb,OAAN;;AAGF,SAAKL,YAAL;AACI,aAAM,EAAC,GAAGO,KAAJ;AAAUH,QAAAA,OAAO,EAACI,MAAM,CAACJ;AAAzB,OAAN;;AAEN;AAAQ,aAAOG,KAAP;AAZT;AAcF,CAfD;;AAiBA,OAAO,MAAMG,aAAa,GAAC,OAAK;AAACD,EAAAA,IAAI,EAACV;AAAN,CAAL,CAApB;AACP,OAAO,MAAMK,OAAO,GAAEA,OAAD,KAAY;AAACK,EAAAA,IAAI,EAACT,YAAN;AAAmBI,EAAAA;AAAnB,CAAZ,CAAd;;AACP,MAAMO,QAAQ,GAAEN,KAAD,KAAU;AAACI,EAAAA,IAAI,EAACR,SAAN;AAAgBI,EAAAA;AAAhB,CAAV,CAAf;;AAEA,OAAO,MAAMO,kBAAkB,GAAC,MAAKC,QAAD,IAAY;AAC5C,MAAIC,OAAO,GAACD,QAAQ,CAAChB,OAAO,EAAR,CAApB;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EAAuBG,IAAvB,CAA4B,MAAI;AAC5BJ,IAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AACH,GAFD;AAGH,CALM;AAMP,OAAO,MAAMQ,aAAa,GAAC,MAAKL,QAAD,IAAY;AACvCM,EAAAA,OAAO,CAACR,QAAR,GAAmBM,IAAnB,CAAwBG,GAAG,IAAE;AACzBP,IAAAA,QAAQ,CAACF,QAAQ,EAAT,CAAR;AACH,GAFD;AAIH,CALM;AAOP,eAAeL,UAAf","sourcesContent":["import {getAuth} from './AuthReducer'\nimport {getInform} from './InformReducer'\nconst SET_INITIALIZED=\"SET_INITIALIZED\"\nconst APP_IS_POPUP=\"APP_IS_POPUP\"\nconst GET_USERS=\"GET_USERS\"\nlet initialState={\n      initialized:false,\n      isPopUp:false,\n      users:[]\n}\n\nconst AppReducer=(state=initialState,action)=>{\n   switch(action.type) {\n     case SET_INITIALIZED:\n      return{\n          ...state,initialized:true\n      }\n      case GET_USERS:\n        return{\n            ...state,users:[action.users]\n        }\n      case APP_IS_POPUP:\n          return{...state,isPopUp:action.isPopUp}\n\n    default:return state\n   }\n}\n\nexport const setInitialize=()=>({type:SET_INITIALIZED})\nexport const isPopUp=(isPopUp)=>({type:APP_IS_POPUP,isPopUp})\nconst getUsers=(users)=>({type:GET_USERS,users})\n\nexport const initializeThunkApp=()=>(dispatch)=>{\n    let promise=dispatch(getAuth())\n    Promise.all([promise]).then(()=>{\n        dispatch(setInitialize());\n    })\n}\nexport const getUsersThunk=()=>(dispatch)=>{\n    testApi.getUsers().then(res=>{\n        dispatch(getUsers())\n    })\n   \n}\n\nexport default AppReducer"]},"metadata":{},"sourceType":"module"}