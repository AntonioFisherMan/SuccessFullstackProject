{"ast":null,"code":"import { testAPI } from \"../api/api\";\nconst GET_GOODS_AC = \"GET_GOODS_AC\";\nconst GET_GOODBYID_AC = \"GET_GOODBYID_AC\";\nconst REMOVE_GOODBYID_AC = \"REMOVE_GOODBYID_AC\";\nconst CHANGE_PAGE_SIZE_GOODS = \"CHANGE_PAGE_SIZE_GOODS\";\nconst CHANGE_PAGE_NUMBER_GOODS = \"CHANGE_PAGE_NUMBER_GOODS\";\nconst CHANGE_SORT_BY = \"CHANGE_SORT_BY\";\nconst CHANGE_FILTER = \"CHANGE_FILTER\";\nconst ClEAR_GOODS_AC = \"ClEAR_GOODS_AC\";\nconst REMOVE_FILTER = \"REMOVE_FILTER\";\nlet initialState = {\n  goods: [],\n  filter: null,\n  filterBy: [\"Рекомендации\"],\n  pageSize: 3,\n  totalCount: 0,\n  pageNumber: 1,\n  goodItem: []\n};\n\nconst CatalogReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_GOODS_AC:\n      return { ...state,\n        goods: [...action.dataGoods.goods],\n        totalCount: action.dataGoods.totalCount\n      };\n\n    case GET_GOODBYID_AC:\n      return { ...state,\n        goodItem: [action.goodItem]\n      };\n\n    case REMOVE_GOODBYID_AC:\n      return { ...state,\n        goodItem: null\n      };\n\n    case ClEAR_GOODS_AC:\n      return initialState;\n\n    case CHANGE_PAGE_SIZE_GOODS:\n      return { ...state,\n        pageSize: action.pageSize\n      };\n\n    case CHANGE_PAGE_NUMBER_GOODS:\n      return { ...state,\n        pageNumber: action.pageNumber\n      };\n\n    case CHANGE_SORT_BY:\n      return { ...state,\n        filterBy: action.filterBy\n      };\n\n    case CHANGE_FILTER:\n      return { ...state,\n        filter: action.filter\n      };\n\n    case REMOVE_FILTER:\n      return { ...state,\n        filter: state.filter.filter(i => i !== action.filter)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ClearGoods = () => ({\n  type: ClEAR_GOODS_AC\n});\nexport const changePageSize = pageSize => ({\n  type: CHANGE_PAGE_SIZE_GOODS,\n  pageSize\n});\nexport const changePageNumber = pageNumber => ({\n  type: CHANGE_PAGE_NUMBER_GOODS,\n  pageNumber\n});\nexport const changeSortBy = filterBy => ({\n  type: CHANGE_SORT_BY,\n  filterBy\n});\n\nconst changeFilter = filter => ({\n  type: CHANGE_FILTER,\n  filter\n});\n\nconst getGoods = dataGoods => ({\n  type: GET_GOODS_AC,\n  dataGoods\n});\n\nconst getGood = goodItem => ({\n  type: GET_GOODBYID_AC,\n  goodItem\n});\n\nexport const removeGood = () => ({\n  type: REMOVE_GOODBYID_AC\n});\nexport const getGoodsForSlider = () => async dispatch => {\n  let response = await testAPI.changeFilter();\n  dispatch(getGoods(response.data));\n};\nexport const getGoodsThunkById = id => async dispatch => {\n  debugger;\n\n  try {\n    let response = await testAPI.getGood(id);\n    var data = response.data.goods.data.good;\n    data.reviews = response.data.goods.data.review;\n    data.goodReviewsQuantity = response.data.reviewQuantity;\n    dispatch(getGood(data));\n  } catch (error) {\n    debugger;\n    console.log(error);\n  }\n};\nexport const getGoodsThunk = (pageNumber, pageSize, data) => dispatch => {\n  testAPI.changeFilter(data, pageSize, pageNumber).then(response => {\n    dispatch(changePageNumber(pageNumber));\n    dispatch(changePageSize(pageSize));\n    dispatch(getGoods(response.data));\n    dispatch(changeFilter(data));\n  });\n};\nexport const removeFilter = filter => (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_FILTER,\n    filter\n  });\n  let data = getState().goods.filter;\n  testAPI.changeFilter(data, getState().goods.pageSize, getState().goods.pageNumber).then(response => {});\n};\nexport default CatalogReducer;","map":{"version":3,"sources":["/Volumes/Anton/myApp-1/APP/client/src/redux/CatalogReducer.js"],"names":["testAPI","GET_GOODS_AC","GET_GOODBYID_AC","REMOVE_GOODBYID_AC","CHANGE_PAGE_SIZE_GOODS","CHANGE_PAGE_NUMBER_GOODS","CHANGE_SORT_BY","CHANGE_FILTER","ClEAR_GOODS_AC","REMOVE_FILTER","initialState","goods","filter","filterBy","pageSize","totalCount","pageNumber","goodItem","CatalogReducer","state","action","type","dataGoods","i","ClearGoods","changePageSize","changePageNumber","changeSortBy","changeFilter","getGoods","getGood","removeGood","getGoodsForSlider","dispatch","response","data","getGoodsThunkById","id","good","reviews","review","goodReviewsQuantity","reviewQuantity","error","console","log","getGoodsThunk","then","removeFilter","getState"],"mappings":"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","sourcesContent":["import { testAPI } from \"../api/api\";\n\nconst GET_GOODS_AC = \"GET_GOODS_AC\";\nconst GET_GOODBYID_AC = \"GET_GOODBYID_AC\";\nconst REMOVE_GOODBYID_AC = \"REMOVE_GOODBYID_AC\";\nconst CHANGE_PAGE_SIZE_GOODS = \"CHANGE_PAGE_SIZE_GOODS\";\nconst CHANGE_PAGE_NUMBER_GOODS = \"CHANGE_PAGE_NUMBER_GOODS\";\nconst CHANGE_SORT_BY = \"CHANGE_SORT_BY\";\nconst CHANGE_FILTER = \"CHANGE_FILTER\";\nconst ClEAR_GOODS_AC = \"ClEAR_GOODS_AC\";\nconst REMOVE_FILTER = \"REMOVE_FILTER\";\nlet initialState = {\n  goods: [],\n  filter: null,\n  filterBy: [\"Рекомендации\"],\n  pageSize: 3,\n  totalCount: 0,\n  pageNumber: 1,\n  goodItem: [],\n};\n\nconst CatalogReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_GOODS_AC:\n      return {\n        ...state,\n        goods: [...action.dataGoods.goods],\n        totalCount: action.dataGoods.totalCount,\n      };\n    case GET_GOODBYID_AC:\n      return { ...state, goodItem: [action.goodItem] };\n    case REMOVE_GOODBYID_AC:\n      return { ...state, goodItem: null };\n    case ClEAR_GOODS_AC:\n      return initialState;\n    case CHANGE_PAGE_SIZE_GOODS:\n      return { ...state, pageSize: action.pageSize };\n    case CHANGE_PAGE_NUMBER_GOODS:\n      return { ...state, pageNumber: action.pageNumber };\n    case CHANGE_SORT_BY:\n      return { ...state, filterBy: action.filterBy };\n    case CHANGE_FILTER:\n      return { ...state, filter: action.filter };\n    case REMOVE_FILTER:\n      return {\n        ...state,\n        filter: state.filter.filter((i) => i !== action.filter),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const ClearGoods = () => ({ type: ClEAR_GOODS_AC });\nexport const changePageSize = (pageSize) => ({\n  type: CHANGE_PAGE_SIZE_GOODS,\n  pageSize,\n});\nexport const changePageNumber = (pageNumber) => ({\n  type: CHANGE_PAGE_NUMBER_GOODS,\n  pageNumber,\n});\nexport const changeSortBy = (filterBy) => ({ type: CHANGE_SORT_BY, filterBy });\n\nconst changeFilter = (filter) => ({ type: CHANGE_FILTER, filter });\n\nconst getGoods = (dataGoods) => ({ type: GET_GOODS_AC, dataGoods });\nconst getGood = (goodItem) => ({ type: GET_GOODBYID_AC, goodItem });\nexport const removeGood = () => ({ type: REMOVE_GOODBYID_AC });\n\nexport const getGoodsForSlider = () => async (dispatch) => {\n  let response = await testAPI.changeFilter();\n  dispatch(getGoods(response.data));\n};\nexport const getGoodsThunkById = (id) => async (dispatch) => {\n  debugger\n  try {\n    let response = await testAPI.getGood(id);\n \n    var data = response.data.goods.data.good;\n    data.reviews = response.data.goods.data.review;\n    data.goodReviewsQuantity = response.data.reviewQuantity;\n  dispatch(getGood(data));\n  } catch (error) {\n    debugger\n    console.log(error)\n  }\n \n};\nexport const getGoodsThunk = (pageNumber, pageSize, data) => (dispatch) => {\n  testAPI.changeFilter(data, pageSize, pageNumber).then((response) => {\n    dispatch(changePageNumber(pageNumber));\n    dispatch(changePageSize(pageSize));\n    dispatch(getGoods(response.data));\n    dispatch(changeFilter(data));\n  });\n};\nexport const removeFilter = (filter) => (dispatch,getState) => {\n  dispatch({ type: REMOVE_FILTER, filter });\n  let data=getState().goods.filter\n  testAPI.changeFilter(data, getState().goods.pageSize, getState().goods.pageNumber).then((response) => {}\n  \n  )\n};\nexport default CatalogReducer;\n"]},"metadata":{},"sourceType":"module"}