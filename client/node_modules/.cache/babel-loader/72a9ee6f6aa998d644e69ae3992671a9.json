{"ast":null,"code":"const CARD_ADD_ITEMS = \"CARD_ADD_ITEMS\";\nconst CARD_REMOVE_ITEMS = \"CARD_REMOVE_ITEMS\";\nconst REMOVE_CARD_ITEMS = \"REMOVE_CARD_ITEMS\";\nconst CHANGE_ITEMS_QUANTITY = \"CHANGE_ITEMS_QUANTITY\";\nconst CARD_ADD_INSURANCE = \"CARD_ADD_INSURANCE\";\nconst CARD_REMOVE_INSURANCE = \"CARD_REMOVE_INSURANCE\";\nlet initialState = {\n  items: [],\n  isLoaded: false,\n  totalPrice: 0\n};\n\nconst CardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CARD_ADD_ITEMS:\n      return { ...state,\n        items: [...state.items, action.payload],\n        isLoaded: true\n      };\n\n    case CARD_REMOVE_ITEMS:\n      return { ...state,\n        items: state.items.filter(i => i._id !== action.itemId)\n      };\n\n    case REMOVE_CARD_ITEMS:\n      return { ...state,\n        items: [],\n        totalPrice: null,\n        totalItemCount: null\n      };\n\n    case CHANGE_ITEMS_QUANTITY:\n      return { ...state,\n        items: state.items.filter(i => i._id === action.id ? i.quantity : action.quantity)\n      };\n\n    case CARD_ADD_INSURANCE:\n      const id = action.id;\n      return { ...state,\n        items: state.items.map(item => {\n          if (item._id === id) {\n            return { ...item,\n              insurance: action.insurance,\n              price: item.price + 5\n            };\n          }\n\n          return item;\n        })\n      };\n\n    case CARD_REMOVE_INSURANCE:\n      const removeId = action.id;\n      return { ...state,\n        items: state.items.map(item => {\n          if (item._id === removeId) {\n            return { ...item,\n              insurance: action.insurance,\n              price: item.price - 5\n            };\n          }\n\n          return item;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addToCart = payload => ({\n  type: CARD_ADD_ITEMS,\n  payload\n});\nexport const clearCardItems = () => ({\n  type: REMOVE_CARD_ITEMS\n});\nexport const removeProduct = itemId => ({\n  type: CARD_REMOVE_ITEMS,\n  itemId\n});\nexport const changeQuantity = (id, quantity) => ({\n  type: CHANGE_ITEMS_QUANTITY,\n  id,\n  quantity\n});\nexport const addInsurance = (id, insurance) => ({\n  type: CARD_ADD_INSURANCE,\n  id,\n  insurance\n});\nexport const removeInsurance = (id, insurance) => ({\n  type: CARD_REMOVE_INSURANCE,\n  id,\n  insurance\n});\nexport default CardReducer;","map":{"version":3,"sources":["/Volumes/Anton/myApp-1/APP/client/src/redux/CardReducer.js"],"names":["CARD_ADD_ITEMS","CARD_REMOVE_ITEMS","REMOVE_CARD_ITEMS","CHANGE_ITEMS_QUANTITY","CARD_ADD_INSURANCE","CARD_REMOVE_INSURANCE","initialState","items","isLoaded","totalPrice","CardReducer","state","action","type","payload","filter","i","_id","itemId","totalItemCount","id","quantity","map","item","insurance","price","removeId","addToCart","clearCardItems","removeProduct","changeQuantity","addInsurance","removeInsurance"],"mappings":"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","sourcesContent":["const CARD_ADD_ITEMS = \"CARD_ADD_ITEMS\";\nconst CARD_REMOVE_ITEMS = \"CARD_REMOVE_ITEMS\";\nconst REMOVE_CARD_ITEMS = \"REMOVE_CARD_ITEMS\";\nconst CHANGE_ITEMS_QUANTITY = \"CHANGE_ITEMS_QUANTITY\";\nconst CARD_ADD_INSURANCE = \"CARD_ADD_INSURANCE\";\nconst CARD_REMOVE_INSURANCE = \"CARD_REMOVE_INSURANCE\";\n\nlet initialState = {\n  items: [],\n  isLoaded: false,\n  totalPrice: 0,\n};\n\nconst CardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CARD_ADD_ITEMS:\n      return {\n        ...state,\n        items: [...state.items, action.payload],\n        isLoaded: true,\n      };\n    case CARD_REMOVE_ITEMS:\n      return {\n        ...state,\n        items: state.items.filter((i) => i._id !== action.itemId),\n      };\n    case REMOVE_CARD_ITEMS:\n      return { ...state, items: [], totalPrice: null, totalItemCount: null };\n    case CHANGE_ITEMS_QUANTITY:\n      return {\n        ...state,\n        items: state.items.filter((i) =>\n          i._id === action.id ? i.quantity : action.quantity\n        ),\n      };\n    case CARD_ADD_INSURANCE:\n      const id = action.id;\n      return {\n        ...state,\n        items: state.items.map((item) => {\n          if (item._id===id) {\n            return {\n              ...item,\n              insurance: action.insurance,\n              price:item.price+5\n            };\n          }\n          return item;\n        }),\n      };\n    case CARD_REMOVE_INSURANCE:\n      const removeId = action.id;\n      return {...state, items: state.items.map((item) => {\n          if (item._id ===removeId) {\n            return {...item,insurance: action.insurance,price:item.price-5 };\n          }return item;\n        }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const addToCart = (payload) => ({ type: CARD_ADD_ITEMS, payload });\nexport const clearCardItems = () => ({ type: REMOVE_CARD_ITEMS });\nexport const removeProduct = (itemId) => ({ type: CARD_REMOVE_ITEMS, itemId });\nexport const changeQuantity = (id, quantity) => ({\n  type: CHANGE_ITEMS_QUANTITY,\n  id,\n  quantity,\n});\nexport const addInsurance = (id, insurance) => ({\n  type: CARD_ADD_INSURANCE,\n  id,\n  insurance,\n});\nexport const removeInsurance = (id, insurance) => ({\n  type: CARD_REMOVE_INSURANCE,\n  id,\n  insurance,\n});\nexport default CardReducer;\n"]},"metadata":{},"sourceType":"module"}