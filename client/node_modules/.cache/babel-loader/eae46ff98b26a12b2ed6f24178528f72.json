{"ast":null,"code":"var _jsxFileName = \"/Volumes/Anton/myApp-1/APP/client/src/components/common/FormsControls/File.jsx\";\nimport React from 'react';\nimport './Input.css';\nexport const File = ({\n  input,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => {\n  delete input.value;\n  const hasError = error && touched;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formControl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: hasError ? \"error\" : \"\",\n    type: type,\n    name: input.name\n  }, input, {\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  })), hasError ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 19\n    }\n  }, error) : null);\n};","map":{"version":3,"sources":["/Volumes/Anton/myApp-1/APP/client/src/components/common/FormsControls/File.jsx"],"names":["React","File","input","type","meta","touched","error","warning","value","hasError","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAO,MAAMC,IAAI,GAAC,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB;AAArB,CAAD,KAAwD;AACtE,SAAOL,KAAK,CAACM,KAAb;AACA,QAAMC,QAAQ,GAACH,KAAK,IAAED,OAAtB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,SAAS,EAAEI,QAAQ,GAAC,OAAD,GAAS,EAAnC;AAAuC,IAAA,IAAI,EAAEN,IAA7C;AAAmD,IAAA,IAAI,EAAED,KAAK,CAACQ;AAA/D,KAAyER,KAAzE;AAAkF,IAAA,QAAQ,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA,EAECO,QAAQ,gBAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,KAAP,CAAD,GAAsB,IAF/B,CADJ;AAMH,CATM","sourcesContent":["import React from 'react'\nimport './Input.css'\nexport const File=({ input, type, meta: { touched, error, warning } }) => {\n    delete input.value\n    const hasError=error&&touched\n    return (\n        <div className=\"formControl\">\n        <input className={hasError?\"error\":\"\"} type={type} name={input.name} {...input}   multiple />\n        {hasError?<span>{error}</span>:null} \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}