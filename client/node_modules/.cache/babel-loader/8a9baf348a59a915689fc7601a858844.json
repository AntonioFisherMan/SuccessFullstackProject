{"ast":null,"code":"import _classCallCheck from\"/Volumes/Anton/myApp-1/APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/Anton/myApp-1/APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/Anton/myApp-1/APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/Anton/myApp-1/APP/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import InformPage from'./InformPage';import{getInform,updateInform,setInform}from'../../../redux/InformReducer';import{compose}from'redux';import{WithAuthRedirect}from'../../../hoc/WithAuthRedirect';import{SuccessErrorsData}from'../../../hoc/SuccessErrorsData';var InformPageContainer=/*#__PURE__*/function(_React$Component){_inherits(InformPageContainer,_React$Component);var _super=_createSuper(InformPageContainer);function InformPageContainer(){_classCallCheck(this,InformPageContainer);return _super.apply(this,arguments);}_createClass(InformPageContainer,[{key:\"componentDidMount\",value:function componentDidMount(){debugger;this.props.getInform(this.props.userId);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(InformPage,Object.assign({},this.props,{isAddInform:this.props.isAddInform,updateInform:this.props.updateInform,setInform:this.props.setInform,success:this.props.success,errors:this.props.errors})));}}]);return InformPageContainer;}(React.Component);var mapDispatchToProps=function mapDispatchToProps(state){return{inform:state.inform.inform,userId:state.auth.user.id,isAddInform:state.inform.isAddInform};};export default compose(WithAuthRedirect,SuccessErrorsData,connect(mapDispatchToProps,{getInform:getInform,updateInform:updateInform,setInform:setInform}))(InformPageContainer);","map":{"version":3,"sources":["/Volumes/Anton/myApp-1/APP/client/src/components/Pages/InformPage/InformContainer.jsx"],"names":["React","connect","InformPage","getInform","updateInform","setInform","compose","WithAuthRedirect","SuccessErrorsData","InformPageContainer","props","userId","isAddInform","success","errors","Component","mapDispatchToProps","state","inform","auth","user","id"],"mappings":"glBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAAQC,SAAR,CAAkBC,YAAlB,CAA+BC,SAA/B,KAA+C,8BAA/C,CACA,OAASC,OAAT,KAAwB,OAAxB,CACA,OAASC,gBAAT,KAAiC,+BAAjC,CACA,OAAQC,iBAAR,KAAgC,gCAAhC,C,GAEMC,CAAAA,mB,iVACe,CACjB,SACA,KAAKC,KAAL,CAAWP,SAAX,CAAqB,KAAKO,KAAL,CAAWC,MAAhC,EACD,C,uCACO,CACJ,mBACE,qDACA,oBAAC,UAAD,kBAAgB,KAAKD,KAArB,EAA4B,WAAW,CAAE,KAAKA,KAAL,CAAWE,WAApD,CAAiE,YAAY,CAAE,KAAKF,KAAL,CAAWN,YAA1F,CAAwG,SAAS,CAAE,KAAKM,KAAL,CAAWL,SAA9H,CAAwI,OAAO,CAAE,KAAKK,KAAL,CAAWG,OAA5J,CAAqK,MAAM,CAAE,KAAKH,KAAL,CAAWI,MAAxL,GADA,CADF,CAMH,C,iCAZ+Bd,KAAK,CAACe,S,EAexC,GAAIC,CAAAA,kBAAkB,CAAC,QAAnBA,CAAAA,kBAAmB,CAACC,KAAD,CAAS,CAC5B,MAAM,CACFC,MAAM,CAACD,KAAK,CAACC,MAAN,CAAaA,MADlB,CAEFP,MAAM,CAACM,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAgBC,EAFrB,CAGFT,WAAW,CAACK,KAAK,CAACC,MAAN,CAAaN,WAHvB,CAAN,CAKH,CAND,CASA,cAAeN,CAAAA,OAAO,CACpBC,gBADoB,CAEpBC,iBAFoB,CAGpBP,OAAO,CAACe,kBAAD,CAAoB,CAACb,SAAS,CAATA,SAAD,CAAWC,YAAY,CAAZA,YAAX,CAAwBC,SAAS,CAATA,SAAxB,CAApB,CAHa,CAAP,CAIbI,mBAJa,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport InformPage from './InformPage';\nimport {getInform,updateInform,setInform} from '../../../redux/InformReducer'\nimport { compose } from 'redux';\nimport { WithAuthRedirect } from '../../../hoc/WithAuthRedirect';\nimport {SuccessErrorsData} from '../../../hoc/SuccessErrorsData'\n\nclass InformPageContainer extends React.Component{\n  componentDidMount(){\n    debugger\n    this.props.getInform(this.props.userId);\n  }\n  render(){\n      return(\n        <>\n        <InformPage {...this.props} isAddInform={this.props.isAddInform} updateInform={this.props.updateInform} setInform={this.props.setInform}success={this.props.success} errors={this.props.errors}\n        />\n        </>\n      )\n  }\n}\n\nlet mapDispatchToProps=(state)=>{\n    return{\n        inform:state.inform.inform,\n        userId:state.auth.user.id,\n        isAddInform:state.inform.isAddInform\n    }\n}\n\n\nexport default compose(\n  WithAuthRedirect,\n  SuccessErrorsData,\n  connect(mapDispatchToProps,{getInform,updateInform,setInform})\n)(InformPageContainer)\n\n"]},"metadata":{},"sourceType":"module"}