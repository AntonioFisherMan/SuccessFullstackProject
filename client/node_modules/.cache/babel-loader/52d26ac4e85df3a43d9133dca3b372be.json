{"ast":null,"code":"import { testAPI } from \"../api/api\";\nimport { returnErrors, returnSuccess } from \"./SuccessErrorReducer\";\nconst SET_REVIEWS = \"SET_REVIEW\";\nconst INITIAL_REVIEWS = \"INITIAL_REVIEWS\";\nlet initialState = {\n  reviews: []\n};\n\nconst ReviewsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIAL_REVIEWS:\n      return initialState;\n\n    case SET_REVIEWS:\n      return { ...state,\n        reviews: [action.item]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setItemOfReview = item => ({\n  type: SET_REVIEWS,\n  item\n});\nexport const clearReview = () => ({\n  type: INITIAL_REVIEWS\n});\nexport const setReviews = (data, goodsId, reviewText, rating) => (dispatch, getState) => {\n  let userImage;\n\n  if (getState().auth.userInform) {\n    userImage = getState().auth.userInform.userImage;\n  }\n\n  testAPI.setReviews(getState().auth.user.name, userImage, data, goodsId, reviewText, rating).then(response => {\n    if (response.data.success) {\n      dispatch(returnSuccess(response.data.message, response.status, \"SUCCESS_FILE_UPLOAD\"));\n      dispatch(clearReview());\n    } else {\n      dispatch(returnErrors(response.data.message, response.status, \"ERRORS_FILE_UPLOAD\"));\n    }\n  });\n};\nexport default ReviewsReducer;","map":{"version":3,"sources":["/Volumes/Anton/myApp-1/APP/client/src/redux/ReviewsReducer.js"],"names":["testAPI","returnErrors","returnSuccess","SET_REVIEWS","INITIAL_REVIEWS","initialState","reviews","ReviewsReducer","state","action","type","item","setItemOfReview","clearReview","setReviews","data","goodsId","reviewText","rating","dispatch","getState","userImage","auth","userInform","user","name","then","response","success","message","status"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,uBAA5C;AACA,MAAMC,WAAW,GAAG,YAApB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAAnB;;AAIA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,eAAL;AACE,aAAOC,YAAP;;AACF,SAAKF,WAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYF,QAAAA,OAAO,EAAE,CAACG,MAAM,CAACE,IAAR;AAArB,OAAP;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATD;;AAWA,OAAO,MAAMI,eAAe,GAAID,IAAD,KAAW;AAAED,EAAAA,IAAI,EAAEP,WAAR;AAAqBQ,EAAAA;AAArB,CAAX,CAAxB;AACP,OAAO,MAAME,WAAW,GAAG,OAAO;AAAEH,EAAAA,IAAI,EAAEN;AAAR,CAAP,CAApB;AAEP,OAAO,MAAMU,UAAU,GAAG,CAACC,IAAD,EAAOC,OAAP,EAAgBC,UAAhB,EAA4BC,MAA5B,KAAuC,CAC/DC,QAD+D,EAE/DC,QAF+D,KAG5D;AACH,MAAIC,SAAJ;;AACA,MAAID,QAAQ,GAAGE,IAAX,CAAgBC,UAApB,EAAgC;AAC9BF,IAAAA,SAAS,GAAGD,QAAQ,GAAGE,IAAX,CAAgBC,UAAhB,CAA2BF,SAAvC;AACD;;AACDrB,EAAAA,OAAO,CACJc,UADH,CAEIM,QAAQ,GAAGE,IAAX,CAAgBE,IAAhB,CAAqBC,IAFzB,EAGIJ,SAHJ,EAIIN,IAJJ,EAKIC,OALJ,EAMIC,UANJ,EAOIC,MAPJ,EASGQ,IATH,CASSC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACZ,IAAT,CAAca,OAAlB,EAA2B;AACzBT,MAAAA,QAAQ,CACNjB,aAAa,CACXyB,QAAQ,CAACZ,IAAT,CAAcc,OADH,EAEXF,QAAQ,CAACG,MAFE,EAGX,qBAHW,CADP,CAAR;AAOAX,MAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACD,KATD,MASO;AACLM,MAAAA,QAAQ,CACNlB,YAAY,CACV0B,QAAQ,CAACZ,IAAT,CAAcc,OADJ,EAEVF,QAAQ,CAACG,MAFC,EAGV,oBAHU,CADN,CAAR;AAOD;AACF,GA5BH;AA6BD,CArCM;AAuCP,eAAevB,cAAf","sourcesContent":["import { testAPI } from \"../api/api\";\n\nimport { returnErrors, returnSuccess } from \"./SuccessErrorReducer\";\nconst SET_REVIEWS = \"SET_REVIEW\";\nconst INITIAL_REVIEWS = \"INITIAL_REVIEWS\";\nlet initialState = {\n  reviews: [],\n};\n\nconst ReviewsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIAL_REVIEWS:\n      return initialState;\n    case SET_REVIEWS:\n      return { ...state, reviews: [action.item] };\n    default:\n      return state;\n  }\n};\n\nexport const setItemOfReview = (item) => ({ type: SET_REVIEWS, item });\nexport const clearReview = () => ({ type: INITIAL_REVIEWS });\n\nexport const setReviews = (data, goodsId, reviewText, rating) => (\n  dispatch,\n  getState\n) => {\n  let userImage;\n  if (getState().auth.userInform) {\n    userImage = getState().auth.userInform.userImage;\n  }\n  testAPI\n    .setReviews(\n      getState().auth.user.name,\n      userImage,\n      data,\n      goodsId,\n      reviewText,\n      rating\n    )\n    .then((response) => {\n      if (response.data.success) {\n        dispatch(\n          returnSuccess(\n            response.data.message,\n            response.status,\n            \"SUCCESS_FILE_UPLOAD\"\n          )\n        );\n        dispatch(clearReview());\n      } else {\n        dispatch(\n          returnErrors(\n            response.data.message,\n            response.status,\n            \"ERRORS_FILE_UPLOAD\"\n          )\n        );\n      }\n    });\n};\n\nexport default ReviewsReducer;\n"]},"metadata":{},"sourceType":"module"}